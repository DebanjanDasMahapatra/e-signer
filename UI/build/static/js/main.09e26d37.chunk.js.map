{"version":3,"sources":["logo.svg","serviceWorker.js","Home.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","Layout","Footer","Content","Home","columns","title","dataIndex","width","render","text","record","index","sorter","a","b","roll","name","className","src","signBuffer","useState","users","updateUsers","flag","setFlag","sigPad","setSigpad","spiner","updateSpinner","email","errors","user","setUser","err","setErr","useEffect","axios","get","then","res","data","status","handleChange","event","validEmailRegex","RegExp","preventDefault","target","value","length","test","style","position","zIndex","theme","mode","defaultSelectedKeys","Item","key","onClick","type","shape","icon","DownloadOutlined","size","right","minWidth","open","margin","padding","minHeight","class","noValidate","htmlFor","onChange","height","canvasProps","ref","clear","disabled","imgData","getTrimmedCanvas","toDataURL","alert","post","reload","message","catch","error","response","dataSource","pagination","filters","scroll","x","total","pageSize","hideOnSinglePage","textAlign","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.09e26d37.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Modal, Button ,Form, Input, Alert,Spin} from 'antd';\r\n\r\n\r\nimport SignaturePad from 'react-signature-canvas'\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\nimport { Table } from 'antd';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\n\r\nconst baseUrl = '';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\nfunction Home() {\r\n    const columns = [{\r\n        title: 'Sl.no.',\r\n        dataIndex: 'index',\r\n        width:20,\r\n        render: (text, record,index) => index+1,\r\n      }, {\r\n        title: 'Roll Number',\r\n        dataIndex: 'roll',\r\n        sorter: (a, b) => a.roll - b.roll,\r\n      }, {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        sorter: (a, b) => a.name> b.name,\r\n      }, {\r\n        title: 'Email',\r\n        dataIndex: 'email',\r\n      }, {\r\n        title: 'Signature',\r\n        dataIndex: 'signBuffer',\r\n        render : (text, record,index)=>{\r\n          // console.log(text,index);\r\n            return <img className='sigImage'\r\n            src={record.signBuffer} />\r\n        }\r\n\r\n      }];\r\n      \r\n\r\n\r\n      const [users,updateUsers] = useState([]);\r\n      const [flag,setFlag] = useState(false);\r\n      const [sigPad,setSigpad] = useState(null);\r\n      const [spiner,updateSpinner] = useState(true);\r\n      const [user,setUser] = useState({\r\n        name: null,\r\n        email: null,\r\n        roll: null,\r\n        signBuffer:null,\r\n        errors: {\r\n          name: ' ',\r\n          email: ' ',\r\n          roll: ' ',\r\n          signBuffer:' '\r\n        }\r\n      });\r\n        const [err,setErr] = useState(null);\r\n      const showModal = () => {\r\n        setFlag(true);\r\n      };\r\n      const hideModal = ()=>{\r\n        setFlag(false);\r\n      }\r\n\r\n      useEffect(()=>{\r\n        axios.get(baseUrl+'/work/getSigns')\r\n        .then(res => {\r\n          updateSpinner(false);\r\n          if(res.data.status){\r\n            updateUsers(res.data.data);\r\n          }\r\n          \r\n          // const persons = res.data;\r\n        })\r\n      },[])\r\n\r\n      const onChange= (pagination, filters, sorter)=>{\r\n        // console.log('params', pagination, filters, sorter);\r\n      }\r\n    \r\n        const clear = () => {\r\n            sigPad.clear()\r\n        }\r\n        const downloadpdf = ()=>{\r\n          window.open(baseUrl+'/work/download', '_blank');\r\n          //window.location.href(baseUrl+'/work/download').target('_blank');\r\n        }\r\n        const handleChange = (event) => {\r\n          setErr(null);\r\n            const validEmailRegex = \r\n                    RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n            event.preventDefault();\r\n            const { name, value } = event.target;\r\n            let errors = user.errors;\r\n          \r\n            switch (name) {\r\n              case 'name': \r\n                errors.name = \r\n                  value.length < 1\r\n                    ? 'Name required!'\r\n                    : '';\r\n                break;\r\n              case 'email': \r\n                errors.email = \r\n                  validEmailRegex.test(value)\r\n                    ? ''\r\n                    : 'Email is not valid!';\r\n                break;\r\n              case 'roll': \r\n                errors.roll = \r\n                  (value+\"\").length < 11\r\n                    ? 'Roll Number must be 11 Digit long!'\r\n                    : '';\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            setUser({...user,[name]:value+\"\",errors})\r\n            // setUser({errors, [name]: value}, ()=> {\r\n            //     console.log(errors)\r\n            // })\r\n          }\r\n\r\n          const handleSubmit = ()=>{\r\n           updateSpinner(true);\r\n            let imgData = sigPad.getTrimmedCanvas().toDataURL('image/png');\r\n            if(user.name.length <1 ||user.email.length < 1||user.roll.length <1){\r\n              alert(\"Please Fill the form!\");\r\n            }\r\n            if(!imgData){\r\n              alert(\"Signature Required!\")\r\n              return false;\r\n            }else{\r\n              //alert(\"form submit\")\r\n              setUser({...user,signBuffer:sigPad.getTrimmedCanvas().toDataURL('image/png')},()=> {\r\n                // console.log(user);\r\n              })\r\n                let data = user;\r\n                delete data['errors'];\r\n                axios.post(baseUrl+'/work/sign',{...data,signBuffer:imgData}).then(res=>{\r\n                  updateSpinner(false);\r\n                  if(res.data.status){\r\n                    window.location.reload(false);\r\n                    // console.log(\"saved\");\r\n                  }else{\r\n                    setErr(res.data.message);\r\n                  }\r\n                  \r\n                 \r\n                }).catch(error => {\r\n                  updateSpinner(false);\r\n                  setErr(error.response);\r\n              });\r\n               \r\n             \r\n            }\r\n            \r\n          }\r\n\r\n  return (\r\n    <Layout>\r\n    <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n      <div className=\"logo\" />\r\n      <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n        <Menu.Item key=\"1\" onClick={showModal}>Add Support</Menu.Item>\r\n        <Menu.Item key=\"2\"onClick={hideModal}>List</Menu.Item>\r\n        {/* <Menu.Item key=\"3\">Report Fake</Menu.Item> */}\r\n      </Menu>\r\n      <Button type=\"primary\" shape=\"round\" icon={<DownloadOutlined />} size='large' style={{position: 'absolute',right:0,minWidth: 'max-content'}} onClick={downloadpdf}> PDF </Button>\r\n    </Header>\r\n    {/* <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}> */}\r\n        \r\n        \r\n      <Breadcrumb style={{ margin: '16px 0' }}>\r\n        <Breadcrumb.Item>No More Exam</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"site-layout-background\" style={{ padding: 2, minHeight: 800 }}>\r\n      {spiner?<div className=\"loader-holder\" >\r\n          <div class=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n      </div>:null}\r\n        {flag?\r\n                        \r\n            <div className='form-wrapper'>\r\n              \r\n                <h2>Sign to Support</h2>\r\n                <form   noValidate >\r\n                  {/* {errorString?\r\n                  <small>{errorString}</small>:null\r\n                  } */}\r\n                  {err?\r\n                        <span className='error'>{err}</span>:null}\r\n                    <div className='fullName'>\r\n                    <label htmlFor=\"fullName\">Name</label>\r\n                    <input type='text' name='name' onChange={handleChange} noValidate />\r\n                    {user.errors.name.length > 1 && \r\n                        <span className='error'>{user.errors.name}</span>}\r\n                    </div>\r\n                    <div className='email'>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type='email' name='email' onChange={handleChange} noValidate />\r\n                    {user.errors.email.length > 1 && \r\n                        <span className='error'>{user.errors.email}</span>}\r\n                    </div>\r\n                    <div className='roll'>\r\n                    <label htmlFor=\"roll\">Roll Number</label>\r\n                    <input type='number' name='roll' onChange={handleChange} noValidate />\r\n                    {user.errors.roll.length > 1 && \r\n                        <span className='error'>{user.errors.roll}</span>}\r\n                    </div>\r\n                    <div className='info'>\r\n                    \r\n                    \r\n                    </div>\r\n                    Sign\r\n                    <div style={{height:'160px',width:'100%'}}>\r\n                    <div className='sigContainer'>\r\n                    <SignaturePad  canvasProps={{className: 'sigPad'}} ref={(ref) => { setSigpad(ref)}} />\r\n                    </div>\r\n                    </div>\r\n                    {user.errors.signBuffer.length > 0 && \r\n                        <span className='error'>{user.errors.signBuffer}</span>}\r\n                    <br></br>\r\n                    <Button onClick={clear} style={{minWidth:'max-content'}}>clear</Button>\r\n                    \r\n                    \r\n                </form>\r\n                <div className='submit'>\r\n                    <button disabled={user.errors.name.length > 0 ||user.errors.email.length > 0||user.errors.roll.length > 0 } onClick={handleSubmit}>Submit</button>\r\n                    </div>\r\n            </div>:\r\n            <div>\r\n                <Table\r\n                 columns={columns} \r\n                 dataSource={users} \r\n                 onChange={onChange} \r\n                 scroll={{ x: 400 }} \r\n                 size='small'\r\n                 title= {()=> 'No Exam Petition'} \r\n                 pagination={{\r\n                  total: users.length,\r\n                  pageSize: users.length,\r\n                  hideOnSinglePage: true\r\n              }}/>\r\n              {/* <Button type=\"primary\" shape=\"round\" icon={<DownloadOutlined />} size='large' style={{position: 'absolute',right:0,top: 0,minWidth: 'max-content'}}> PDF </Button> */}\r\n            </div>\r\n        }\r\n      </div>\r\n    {/* </Content> */}\r\n    <Footer style={{ textAlign: 'center' }}>Digi-Sign ©2030 Created by Future Team</Footer>\r\n  </Layout>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Home from './Home';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Home></Home>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}